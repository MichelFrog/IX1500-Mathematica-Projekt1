(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     61513,       1311]
NotebookOptionsPosition[     50213,       1055]
NotebookOutlinePosition[     57827,       1251]
CellTagsIndexPosition[     57784,       1248]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Report Project II ", "Title",
 CellChangeTimes->{{3.7459154047184057`*^9, 3.7459154064853964`*^9}, {
  3.747469251961893*^9, 
  3.74746925268087*^9}},ExpressionUUID->"5ec30780-8770-4edb-9a4e-\
e84cbbc34bc1"],

Cell["\<\
Course code: IX1500
Date: 2018-10-04\
\>", "Text",
 CellChangeTimes->{{3.7459005683557787`*^9, 3.7459005830297728`*^9}, 
   3.745917252004038*^9, {3.747469257407501*^9, 
   3.7474692692685204`*^9}},ExpressionUUID->"d76c9fe8-0de8-4e96-bcad-\
8e09a7a9c32f"],

Cell["\<\
Michel Ouadria, ouadria@kth.se
Rikard Jakobsson, rikjak@kth.se\
\>", "Text",
 CellChangeTimes->{{3.745900587403556*^9, 
  3.745900629536488*^9}},ExpressionUUID->"5b59cc00-72b1-4851-955b-\
05cf10d132c5"],

Cell[CellGroupData[{

Cell["Task 1: RSA cipher", "Subchapter",
 CellChangeTimes->{{3.745894137850131*^9, 3.74589415010632*^9}, 
   3.747469840519957*^9},ExpressionUUID->"c9c485c5-5de3-466d-bc62-\
d72c6f1c8608"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.745905779287764*^9, 
  3.7459057793680964`*^9}},ExpressionUUID->"a9d86dbc-b04f-485a-8334-\
5a7faf580b36"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"37160594-fd08-48db-8a0d-e5ce0d11e4d4"],

Cell[TextData[{
 "Professor Alice is sending a message to the student Bob according to the \
procedure in section ",
 
 CounterBox["Section", "RSAauthentication"],
 ".",
 
 CounterBox["Subsection", "RSAauthentication"],
 ".4. You are supposed to crack the message. When translating to ASCII, you \
can assume the base 256."
}], "Text",
 CellChangeTimes->{{3.745898260472755*^9, 3.74589830272867*^9}, 
   3.7474696912031*^9},ExpressionUUID->"0f7c5925-c5f7-4da9-a00d-9df69ff63f28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "nBob", "=", "126456119090476383371855906671054993650778797793018127"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eBob", "=", "7937"}], ";"}]}], "Input",ExpressionUUID->"fb2643d5-\
a89e-45d3-a97b-df9990bc53bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cipher", "=", 
   RowBox[{"{", 
    RowBox[{
    "60833078379832053733665235104517667174744887177103669", ",", 
     "47845135110330425759238983903835414959478333031403660", ",", 
     "29226436027122547212719862444995325439654173683124719", ",", 
     "26852073219160460393476539289841435348076003235573562", ",", 
     "18536789208272843521201394019815486297145984481554371", ",", 
     "60946204295190537657611153931568067486237180585452998", ",", 
     "23651682987715782801807742133012602969829495021520007", ",", 
     "112630050746349041975951827486336529408641182025699787", ",", 
     "46387928110260904731968713144311859620686048715174256", ",", 
     "101614383351383083936620333816943396668613455381224570"}], "}"}]}], 
  ";"}]], "Input",ExpressionUUID->"454582b8-1684-4d2d-b3af-b4543c900034"],

Cell["The numbers is the list seems to be of the same size. Why?", "Item",ExpressionUUID->"569cd3ed-e8dd-44a1-b8ee-7b123999981e"]
}, Open  ]],

Cell["Result", "Subsection",ExpressionUUID->"0b612558-1670-4264-bb78-fe41fae05863"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.7459005595301113`*^9, 3.745900560718041*^9}, {
  3.7459154278512144`*^9, 
  3.7459154372857847`*^9}},ExpressionUUID->"e77817a6-e9d0-478e-828c-\
48e49be85994"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "nBob", "=", "126456119090476383371855906671054993650778797793018127"}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"Public", " ", "key"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eBob", "=", "7937"}], ";", 
  RowBox[{"(*", 
   RowBox[{"Bobs", " ", "public", " ", "key"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"B", " ", "=", " ", "256"}], ";", 
  RowBox[{"(*", 
   RowBox[{"Base", " ", "for", " ", "the", " ", "ascii"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"FactorInteger", "[", "nBob", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pBob", " ", "=", " ", "494991074232809803525292243"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "One", " ", "of", " ", "the", " ", "two", " ", "prime", " ", "factors", 
    " ", "of", " ", "n"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"qBob", " ", "=", " ", "255471513878248459929909589"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Second", " ", "of", " ", "the", " ", "two"}], "..."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"pBob", "-", "1"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"qBob", "-", "1"}], ")"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Phi", " ", "of", " ", "any", " ", "prime", " ", "number", " ", "is"}], 
    " ", "-", 
    RowBox[{
    "1", " ", "since", " ", "no", " ", "prime", " ", "number", " ", "has", 
     " ", "no", " ", "factor", " ", "greater", " ", "than", " ", "one"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"GCD", "[", 
   RowBox[{"phi", ",", "eBob"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dBob", " ", "=", " ", 
    RowBox[{"PowerMod", "[", 
     RowBox[{"eBob", ",", 
      RowBox[{"-", "1"}], ",", "phi"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cAlice", "=", 
    RowBox[{"{", 
     RowBox[{
     "60833078379832053733665235104517667174744887177103669", ",", 
      "47845135110330425759238983903835414959478333031403660", ",", 
      "29226436027122547212719862444995325439654173683124719", ",", 
      "26852073219160460393476539289841435348076003235573562", ",", 
      "18536789208272843521201394019815486297145984481554371", ",", 
      "60946204295190537657611153931568067486237180585452998", ",", 
      "23651682987715782801807742133012602969829495021520007", ",", 
      "112630050746349041975951827486336529408641182025699787", ",", 
      "46387928110260904731968713144311859620686048715174256", ",", 
      "101614383351383083936620333816943396668613455381224570"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mFromAlice", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{
       RowBox[{"cAlice", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "dBob", ",", "nBob"}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readMessage", "[", "x_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mFromAlice", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{"x", ",", "dBob", ",", "nBob"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"q", "=", "mFromAlice"}], ";", 
    RowBox[{"ascii", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{"q", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"ascii", ",", 
         RowBox[{"Mod", "[", 
          RowBox[{"q", ",", "B"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"Quotient", "[", 
         RowBox[{"q", ",", "B"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"FromCharacterCode", "[", "ascii", "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"StringJoin", "[", 
  RowBox[{"readMessage", "/@", "cAlice"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.747478671944974*^9, {3.747545911054625*^9, 3.747545933149562*^9}, {
   3.7475459654677467`*^9, 3.747545986443194*^9}, {3.7475476063417788`*^9, 
   3.7475476079641333`*^9}, {3.7475478313014936`*^9, 3.747547833061665*^9}, {
   3.747547992092847*^9, 3.7475480676990433`*^9}, {3.747549089332612*^9, 
   3.7475491162197266`*^9}, {3.7475497377236633`*^9, 
   3.7475497407841005`*^9}, {3.747550247130973*^9, 3.747550253380887*^9}, {
   3.747550289335822*^9, 
   3.747550289554493*^9}},ExpressionUUID->"da33be6c-8bc4-4312-9f5c-\
a0a477956acd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"255471513878248459929909589", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"494991074232809803525292243", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.747478673788993*^9, 
  3.747549759608782*^9},ExpressionUUID->"865c92c8-b119-4663-b7cd-\
adb8896c0fe4"],

Cell[BoxData["\<\"Congratulations! You have now managed to crack the RSA \
cipher. This means that you have a pass grade for project 2. If you want to \
pursue a higher grade you need to solve one more problem.  \"\>"], "Output",
 CellChangeTimes->{3.747478673788993*^9, 
  3.7475497596243973`*^9},ExpressionUUID->"d973d3f7-cd88-4346-b1ee-\
858f84b69666"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.745897990413889*^9, 3.745898001945088*^9}, 
   3.745916396838028*^9},ExpressionUUID->"f96b4ff5-f5d4-4d58-9e3e-\
96c21a14ea98"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2: RSA decryption analysis", "Subchapter",
 CellChangeTimes->{{3.745894219587685*^9, 3.7458942527364607`*^9}, 
   3.7458943588631067`*^9, 
   3.747469849100747*^9},ExpressionUUID->"b3b265e7-0d9c-49a2-84ae-\
469bf0bbbecc"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.745905775279833*^9, 
  3.745905775392261*^9}},ExpressionUUID->"77c0908a-0d85-44ff-8c93-\
72b15ce3eac1"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"4d088a5a-2d11-429b-93d7-104b72cfc49a"],

Cell[TextData[{
 "Write a method ",
 StyleBox["RSAcrack[cipher,n,e]",
  FontFamily->"Courier New",
  FontWeight->"Regular"],
 " that will crack a standard RSA cipher and delivers clear text from the \
string cipher. When you are finished with your method, you should investigate \
how long it will take to crack the cipher of the English text \
\[OpenCurlyDoubleQuote]ATTENTION THE UNIVERSE! BY KINGDOMS RIGHT WHEEL.\
\[CloseCurlyDoubleQuote] for different sizes on your public key n (100-200 \
bits). Visualize your results in a proper graph. It is very important that \
you study the section 2.3 in the instructions. Your graph should lead you to \
a model where you can predict how long it would take to crack a cipher if n \
is 1024, 2048 bits or 4096 bits "
}], "Text",ExpressionUUID->"d19ca678-b342-43db-9f2b-cb94cef6017a"],

Cell["Motivate your selected mathematical model!", "Item",ExpressionUUID->"3c5268bc-04df-4e94-ac65-afa1cb9727b1"]
}, Open  ]],

Cell["Result", "Subsection",ExpressionUUID->"076898f5-7c34-4cc2-923b-a978a097670e"],

Cell[CellGroupData[{

Cell["Discussion", "Subsection",
 CellChangeTimes->{{3.745898345279364*^9, 
  3.745898357900612*^9}},ExpressionUUID->"dd6f43ed-e851-49ca-a4c7-\
c24d7cd2ee41"],

Cell["\<\
The combinatorial method was more straightforward than the census method \
since  there weren\[CloseCurlyQuote]t any need hard syntax to deal with. \
Instead, we used logic and combinatorics to solve the probability. Some of \
the hands, such as flush and straight, required some extra thought since they \
need to exclude some cases.

We started task one with some combinatorics to understand the poker hands, \
this is likely why task two was more clearcut. Also due to the lack of hands \
to calculate. 
\
\>", "Text",
 CellChangeTimes->{{3.746526732837905*^9, 3.7465267332177553`*^9}, 
   3.746528317397232*^9, {3.746531000943029*^9, 3.746531053777567*^9}, {
   3.7465312293324213`*^9, 3.746531283340523*^9}, {3.746531345148362*^9, 
   3.746531429122571*^9}, {3.746531482532333*^9, 3.746531561533242*^9}, {
   3.746531593682275*^9, 3.7465316008034077`*^9}, {3.746531841325654*^9, 
   3.746531841826564*^9}, {3.746531956756486*^9, 3.746532058281102*^9}, {
   3.746532090801093*^9, 3.746532137584667*^9}, {3.746594833566084*^9, 
   3.746594866394533*^9}},ExpressionUUID->"82335164-7cf1-44c0-9266-\
37e8b125e74f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Subsection",
 CellChangeTimes->{{3.745898345279364*^9, 3.745898357900612*^9}, {
  3.746531943209958*^9, 
  3.746531945465961*^9}},ExpressionUUID->"14c30cb5-8159-42d8-8dee-\
5696a6e728a0"],

Cell["\<\
The result from the combinatorial calculations verifies the same probability \
as the census method.\
\>", "Text",
 CellChangeTimes->{{3.746531564145817*^9, 
  3.7465315706085577`*^9}},ExpressionUUID->"9f58eac4-5992-4cb7-a0dd-\
572060a7dcec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"a4c88bd6-dac7-47d2-81b0-72668aee5a85"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", "256"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Base", " ", "for", " ", "the", " ", "ascii"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "message", " ", "=", " ", 
    "\"\<ATTENTION THE UNIVERSE! BY KINGDOMS RIGHT WHEEL.\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Test", " ", "varaibles"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "nBob", "=", "126456119090476383371855906671054993650778797793018127"}], 
  ";", 
  RowBox[{"(*", 
   RowBox[{"Public", " ", "key"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"eBob", "=", "7937"}], ";", 
  RowBox[{"(*", 
   RowBox[{"Bobs", " ", "public", " ", "key"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"eeBob", " ", "=", " ", "4411"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "nnBob", " ", "=", " ", "256595247661017358000842771397097190233"}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"/", "test"}], " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Crack", " ", "the", " ", "RSA"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSAcrack", "[", 
    RowBox[{"cipher_", ",", "n_", ",", "e_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pq", " ", "=", " ", 
      RowBox[{"FactorInteger", "[", "n", "]"}]}], ";", "\n", "     ", 
     RowBox[{"(*", 
      RowBox[{
      "One", " ", "of", " ", "the", " ", "two", " ", "prime", " ", "factors", 
       " ", "of", " ", "n"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"p", " ", "=", " ", 
      RowBox[{"pq", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"pq", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Second", " ", "of", " ", "the", " ", "two"}], "..."}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"phi", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Phi", " ", "of", " ", "any", " ", "prime", " ", "number", " ", "is"}],
        " ", "-", 
       RowBox[{
       "1", " ", "since", " ", "no", " ", "prime", " ", "number", " ", "has", 
        " ", "no", " ", "factor", " ", "greater", " ", "than", " ", "one"}]}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"GCD", "[", 
      RowBox[{"phi", ",", "e"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", " ", "=", " ", 
      RowBox[{"PowerMod", "[", 
       RowBox[{"e", ",", 
        RowBox[{"-", "1"}], ",", "phi"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"mFromAlice", "=", 
        RowBox[{"PowerMod", "[", 
         RowBox[{
          RowBox[{"cAlice", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "dBob", ",", "nBob"}], 
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readMessage", "[", "msg_", "]"}], ":=", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mFromAlice", "=", 
         RowBox[{"PowerMod", "[", 
          RowBox[{"msg", ",", "d", ",", "n"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"qu", "=", "mFromAlice"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ascii", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"qu", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"ascii", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"qu", ",", "B"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"qu", "=", 
            RowBox[{"Quotient", "[", 
             RowBox[{"qu", ",", "B"}], "]"}]}]}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"FromCharacterCode", "[", "ascii", "]"}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"readMessage", "/@", "cipher"}], "]"}]}], "\[IndentingNewLine]",
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Splits", " ", "the", " ", "provided", " ", "string", " ", "into", " ", 
    "smaller", " ", "string", " ", "chunks", " ", "of", " ", "the", " ", 
    "provided", " ", "size"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chunk", "[", 
     RowBox[{"string_", ",", "partSize_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"StringCases", "[", 
      RowBox[{"string", ",", 
       RowBox[{"RegularExpression", "[", 
        RowBox[{"\"\<.{1,\>\"", "<>", 
         RowBox[{"ToString", "[", "partSize", "]"}], "<>", "\"\<}\>\""}], 
        "]"}]}], "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Gets", " ", "char", " ", "code", " ", "from", " ", "the", " ", "provided",
     " ", "string", " ", "using", " ", "the", " ", "n", " ", "and", " ", "e", 
    " ", "keys"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"charCode", "[", 
    RowBox[{"msg_", ",", "n_", ",", "e_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"mess", " ", "=", 
      RowBox[{
       RowBox[{"ToCharacterCode", "[", "msg", "]"}], ".", " ", 
       SuperscriptBox["B", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"StringLength", "[", "msg", "]"}], "]"}], "-", "1"}]]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"mOut", "=", " ", 
      RowBox[{"PowerMod", "[", 
       RowBox[{"mess", ",", "e", ",", "n"}], "]"}]}]}], ")"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Creates", " ", "a", " ", "cipher", " ", "using", " ", "the", " ", 
    "public", " ", "keys"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSAencrypt", "[", 
    RowBox[{"msg_", ",", "n_", ",", "e_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cipher", " ", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"chunkat", "=", 
      RowBox[{"chunk", "[", 
       RowBox[{"msg", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"charCode", "[", 
         RowBox[{"#", ",", "n", ",", "e"}], "]"}], ")"}], "&"}], "/@", 
      "chunkat"}]}], ")"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "testMsg", " ", "=", 
   "\"\< Write a method that will crack a standard RSA cipher and delivers \
clear text from the string cipher.When you are finished with your method,you \
should investigate how long it will take to crack the cipher of the English \
text 'ATTENTION THE UNIVERSE! BY KINGDOMS RIGHT WHEEL.'for different sizes on \
your public key n (100-200 bits).Visualize your results in a proper graph.It \
is very important that you study the section 2.3 in the instructions.Your \
graph should lead you to a model where you can predict how long it would take \
to crack a cipher if n is 1024,2048 bits or 4096 bits\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "=", " ", 
   RowBox[{"RSAencrypt", "[", 
    RowBox[{"testMsg", ",", "nBob", ",", "eBob"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSAcrack", "[", 
   RowBox[{"test", ",", "nBob", ",", "eBob"}], "]"}], 
  StyleBox["\[IndentingNewLine]",
   FontFamily->"Courier New",
   FontWeight->"Regular"], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"testMsg", " ", "=", " ", "\"\<Congratuzztions! Yo123\>\""}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"test", " ", "=", " ", 
     RowBox[{"RSAencrypt", "[", 
      RowBox[{"testMsg", ",", "nBob", ",", "eBob"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RSAcrack", "[", 
       RowBox[{"test", ",", "nBob", ",", "eBob"}], "]"}], 
      "\[IndentingNewLine]", 
      StyleBox["\[IndentingNewLine]",
       FontFamily->"Courier New",
       FontWeight->"Regular"], "testMsg"}], " ", "=", " ", 
     "\"\<Congratulationt! Yo123\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"test", " ", "=", " ", 
     RowBox[{"RSAencrypt", "[", 
      RowBox[{"testMsg", ",", "nBob", ",", "eBob"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RSAcrack", "[", 
       RowBox[{"test", ",", "nBob", ",", "eBob"}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "testMsg"}], " ", "=", 
     " ", "\"\<Congratulations! Yo123\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"test", " ", "=", " ", 
     RowBox[{"RSAencrypt", "[", 
      RowBox[{"testMsg", ",", "nBob", ",", "eBob"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RSAcrack", "[", 
       RowBox[{"test", ",", "nBob", ",", "eBob"}], "]"}], 
      StyleBox["\[IndentingNewLine]",
       FontFamily->"Courier New",
       FontWeight->"Regular"], "\[IndentingNewLine]", "testMsg"}], " ", "=", 
     " ", "\"\<Congratulations! Yo12\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"test", " ", "=", " ", 
     RowBox[{"RSAencrypt", "[", 
      RowBox[{"testMsg", ",", "nBob", ",", "eBob"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"RSAcrack", "[", 
     RowBox[{"test", ",", "nBob", ",", "eBob"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cAlice", "=", 
     RowBox[{"{", 
      RowBox[{
      "60833078379832053733665235104517667174744887177103669", ",", 
       "47845135110330425759238983903835414959478333031403660", ",", 
       "29226436027122547212719862444995325439654173683124719", ",", 
       "26852073219160460393476539289841435348076003235573562", ",", 
       "18536789208272843521201394019815486297145984481554371", ",", 
       "60946204295190537657611153931568067486237180585452998", ",", 
       "23651682987715782801807742133012602969829495021520007", ",", 
       "112630050746349041975951827486336529408641182025699787", ",", 
       "46387928110260904731968713144311859620686048715174256", ",", 
       "101614383351383083936620333816943396668613455381224570"}], "}"}]}], 
    ";", "\n", 
    RowBox[{"RSAcrack", "[", 
     RowBox[{"cAlice", ",", "nBob", ",", "eBob"}], 
     StyleBox["]",
      FontWeight->"Bold"]}]}], 
   StyleBox[
    RowBox[{
     StyleBox["*",
      FontWeight->"Bold"], 
     StyleBox[")",
      FontWeight->"Bold"]}]]}], "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Bob", " ", "wants", " ", "to", " ", "send", " ", "a", " ", "message", 
      " ", "to", " ", 
      RowBox[{"alice", ".", " ", "He"}], "  ", "pads", " ", "it", " ", "with",
       " ", "m", "\[IndentingNewLine]", 
      RowBox[{
      "Alice", " ", "generates", " ", "public", " ", "and", " ", "private", 
       " ", "key", " ", "by", " ", "generate", " ", "a", " ", "prime", " ", 
       "of", " ", "same", " ", "size"}]}], ",", " ", 
     RowBox[{"100", "-", 
      RowBox[{"200.", " ", "\[IndentingNewLine]", "Then"}]}], ",", " ", 
     RowBox[{"muliply", " ", "to", " ", "get", " ", 
      RowBox[{"n", ".", " ", "\[IndentingNewLine]", "Then"}], " ", "to", " ", 
      "get", " ", "Phi", " ", "of", " ", "n"}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", "-", "1"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], "\[IndentingNewLine]", "Pick", " ", 
      "a", " ", "small", " ", "odd", " ", "number", " ", "that", " ", 
      RowBox[{"DOESN", "'"}], "T", " ", "share", " ", "a", " ", "factor", " ",
       "with", " ", "Phi", 
      RowBox[{
       RowBox[{"(", "N", ")"}], ".", "\[IndentingNewLine]", "Finally"}]}], 
     ",", " ", 
     RowBox[{"find", " ", 
      RowBox[{"d", "."}]}]}], " ", "\[IndentingNewLine]", "*)"}],
   FontFamily->"Courier New",
   FontWeight->"Regular"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.747549876507493*^9, 3.7475499112114553`*^9}, {
   3.7475499438211703`*^9, 3.7475499492750454`*^9}, {3.7475499914124193`*^9, 
   3.747550014662299*^9}, {3.74755120878083*^9, 3.74755121152407*^9}, {
   3.7475512448024282`*^9, 3.7475513744554076`*^9}, {3.7475514406412125`*^9, 
   3.7475514884736223`*^9}, {3.7475517083599305`*^9, 3.747551710538432*^9}, 
   3.747551758959484*^9, {3.747551802639903*^9, 3.747551818482092*^9}, {
   3.7475520029589005`*^9, 3.7475520271483583`*^9}, {3.7475529083338733`*^9, 
   3.7475529836790047`*^9}, {3.7475532863027368`*^9, 3.747553302468449*^9}, {
   3.747553372100742*^9, 3.7475533742351084`*^9}, {3.7475534151933556`*^9, 
   3.747553431882245*^9}, {3.7475541380404634`*^9, 3.7475541489170885`*^9}, 
   3.7475549726052217`*^9, {3.7475556245221124`*^9, 3.747555635754921*^9}, 
   3.747555713583892*^9, {3.7475557982575855`*^9, 3.7475558183618326`*^9}, 
   3.747555875320141*^9, {3.7475561119716897`*^9, 3.7475561507344666`*^9}, {
   3.7475563444488015`*^9, 3.7475563498990765`*^9}, {3.7475566187896085`*^9, 
   3.747556727859226*^9}, {3.747556857533947*^9, 3.747556902586546*^9}, {
   3.7475569681154985`*^9, 3.7475570753761644`*^9}, {3.7475571976551027`*^9, 
   3.747557205476673*^9}, {3.7475573949946337`*^9, 3.74755745172599*^9}, {
   3.747557482689845*^9, 3.747557545428227*^9}, {3.7475576488860073`*^9, 
   3.747557653889211*^9}, {3.747557716755541*^9, 3.747557756133078*^9}, {
   3.7475579729779253`*^9, 3.7475579819448724`*^9}, {3.74755813671218*^9, 
   3.7475581457387905`*^9}, {3.7475581826427813`*^9, 3.747558192743602*^9}, 
   3.747558266392054*^9, {3.7475606626782866`*^9, 3.74756068472293*^9}, {
   3.7475609291472683`*^9, 3.747560940421805*^9}, {3.7475611804331284`*^9, 
   3.7475611869124365`*^9}, {3.747561349108906*^9, 3.74756140396082*^9}, {
   3.7475614449760294`*^9, 3.74756145378013*^9}, {3.7475616178748817`*^9, 
   3.7475616412915196`*^9}, {3.7475618402902603`*^9, 3.747561842069808*^9}, {
   3.747561874508102*^9, 3.7475619000366707`*^9}, {3.747561933236773*^9, 
   3.747561946819766*^9}, {3.7475620043353987`*^9, 3.747562037193406*^9}, {
   3.7475620862248077`*^9, 3.747562102196728*^9}, {3.7475621352342606`*^9, 
   3.7475621916940174`*^9}, {3.747562223256733*^9, 3.747562316100662*^9}, {
   3.7475623923772326`*^9, 3.747562469547317*^9}, {3.747562566234659*^9, 
   3.74756260453745*^9}, 3.7475626398370886`*^9, 3.747562672977528*^9, {
   3.7475659654742455`*^9, 3.7475660664132743`*^9}, {3.747566098226372*^9, 
   3.747566101712429*^9}, {3.7475661543645535`*^9, 3.747566238926979*^9}, {
   3.747566273702422*^9, 3.747566314757323*^9}, {3.747566348046277*^9, 
   3.7475664270040774`*^9}, {3.7475664764603834`*^9, 
   3.7475664893640146`*^9}, {3.747566566892592*^9, 3.7475665803178043`*^9}, {
   3.747566610457906*^9, 3.747566615372693*^9}, 3.747566647537452*^9, {
   3.7475667165300198`*^9, 3.747566732367401*^9}, {3.74756712182161*^9, 
   3.7475671499497614`*^9}, {3.74756723626956*^9, 3.747567275607953*^9}, {
   3.7475673236799335`*^9, 3.747567439991666*^9}, {3.7475674892913227`*^9, 
   3.7475675346838894`*^9}, {3.747567571945343*^9, 3.7475675740256557`*^9}, {
   3.747567640678878*^9, 3.747567691239377*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"6fdbb906-5bdb-4ac2-8605-06731da069ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "20456022824052054078807400126017304283171616299262285", ",", 
   "118369518054114107488275065730370520444769960618844342", ",", 
   "124846199537745377670160990030526870311915002002564718", ",", 
   "28312680222473027693306422985541031780985847858408804", ",", 
   "14142864048656498236634140714750684318177712013410805", ",", 
   "113422886820382161977662737854286816637694222561107059", ",", 
   "90275464514542915270795719958532544771169191467958422", ",", 
   "100947849851845707455594179877079751971988628620925108", ",", 
   "61806633107954464106375458030165524110348525057570146", ",", 
   "93087155673264490838095597787432142087246300637354341", ",", 
   "84858451911584506784085938944470826890461055009243639", ",", 
   "40722254630503647694113370055960183537840387129954059", ",", 
   "31598721631625903573891157012531356280017652533761222", ",", 
   "3517236633087412005589273851344199194883012722602501", ",", 
   "110675516159998559227006426864860257058409796209323922", ",", 
   "57637255335172695192012572896855038174990021572609444", ",", 
   "111712510887705372622813205269292400670764663327501133", ",", 
   "87343719638726465512983373848451812011623360660881074", ",", 
   "103264551544506460881674279620366228912169696863040662", ",", 
   "104543861020775169439711426238788146784490012714302523", ",", 
   "107687562349733191025254672274360053558265913441267491", ",", 
   "62559749763230438248897128827031011106715752193931434", ",", 
   "14142864048656498236634140714750684318177712013410805", ",", 
   "113422886820382161977662737854286816637694222561107059", ",", 
   "90275464514542915270795719958532544771169191467958422", ",", 
   "22742240624310792673668953730114464952409239625028217", ",", 
   "39984855214007062168610731816551897072839368594149748", ",", 
   "59161143524306695639161980293765326799430401033303025", ",", 
   "43813118999997466397263219172052275655951854823694559", ",", 
   "78906397901656709401039881033272017070492568318099212", ",", 
   "93801775049621120929521174123515593366919322637909776", ",", 
   "98137978951576404862574192170647730738448728097291568", ",", 
   "103212279580732140019361305613962981319178643541408419", ",", 
   "64434754208945890666402665554504343295646317959492738", ",", 
   "123230980621146988282934381012987588412158890301570078", ",", 
   "6277798730726763228158478508405478210904938147979320", ",", 
   "8448448336579438222332361520898254358522426665147214", ",", 
   "113820619627044094367874431235408260568858473035858510", ",", 
   "18905202053617821279136499561300781103981815989487436", ",", 
   "75252185860943453323816107116622655978235740074248264", ",", 
   "19475041079144041269883816090077572990348144809144839", ",", 
   "88796100273098615811467724229967818122033737413814771", ",", 
   "80680636675411594387304951076154693874394268845744133", ",", 
   "103212279580732140019361305613962981319178643541408419", ",", 
   "24755882983128634964457053358476711980172929185778496", ",", 
   "1113567818783571802779422010428617993880350255555798", ",", 
   "22178213839692213019812424473314585960438775626608857", ",", 
   "42251085783362503207803926636821790831016738884631804", ",", 
   "79525701851818893407894615722495026627354452019762351", ",", 
   "41840689963057928535802020600927756284414746551201708", ",", 
   "79569695030097420099831859273330959903174495163456981", ",", 
   "44870388477498678773148748310432611031425715808435796", ",", 
   "68069089165668636958854564477853789978701281403551852", ",", 
   "86030775261977985995224801801829936551231106292290926", ",", 
   "76037970698511471346903036696518045690230507514000380", ",", 
   "10467222016724922640886485016940070078674366475067699", ",", 
   "101299805174771317005840743325480546542173343692500632", ",", 
   "65076254819799640765674255823573309639689009187747179", ",", 
   "41700305827314385482026379377936180190643821109760370", ",", 
   "93087155673264490838095597787432142087246300637354341", ",", 
   "84858451911584506784085938944470826890461055009243639", ",", 
   "40722254630503647694113370055960183537840387129954059", ",", 
   "31598721631625903573891157012531356280017652533761222", ",", 
   "3517236633087412005589273851344199194883012722602501", ",", 
   "110675516159998559227006426864860257058409796209323922", ",", 
   "57637255335172695192012572896855038174990021572609444", ",", 
   "111712510887705372622813205269292400670764663327501133", ",", 
   "87343719638726465512983373848451812011623360660881074", ",", 
   "103264551544506460881674279620366228912169696863040662", ",", 
   "104543861020775169439711426238788146784490012714302523", ",", 
   "107687562349733191025254672274360053558265913441267491", ",", 
   "62559749763230438248897128827031011106715752193931434", ",", 
   "14142864048656498236634140714750684318177712013410805", ",", 
   "113422886820382161977662737854286816637694222561107059", ",", 
   "90275464514542915270795719958532544771169191467958422", ",", 
   "88073693100674407788387229418947658037793708614287776", ",", 
   "39984855214007062168610731816551897072839368594149748", ",", 
   "59161143524306695639161980293765326799430401033303025", ",", 
   "43813118999997466397263219172052275655951854823694559", ",", 
   "78906397901656709401039881033272017070492568318099212", ",", 
   "93801775049621120929521174123515593366919322637909776", ",", 
   "98137978951576404862574192170647730738448728097291568", ",", 
   "103212279580732140019361305613962981319178643541408419", ",", 
   "64434754208945890666402665554504343295646317959492738", ",", 
   "123230980621146988282934381012987588412158890301570078", ",", 
   "6277798730726763228158478508405478210904938147979320", ",", 
   "8448448336579438222332361520898254358522426665147214", ",", 
   "113820619627044094367874431235408260568858473035858510", ",", 
   "18905202053617821279136499561300781103981815989487436", ",", 
   "75252185860943453323816107116622655978235740074248264", ",", 
   "19475041079144041269883816090077572990348144809144839", ",", 
   "25890535752965830644793808537071127897552993418813043", ",", 
   "111712510887705372622813205269292400670764663327501133", ",", 
   "114775395010470201278833914995307684879311722980329894", ",", 
   "122857617788339221271788453937423709452908318429098358", ",", 
   "76781148827963413908259106905057671184060400380764212", ",", 
   "12027134639007322654676998844550768981931013841579053", ",", 
   "31106263466727663117785240290432052257664871568883177", ",", 
   "93087155673264490838095597787432142087246300637354341", ",", 
   "88665235236401334675131552673425573270822545885364014", ",", 
   "112282584555343612733956334707308646850462877144529829", ",", 
   "63784424488598615472282900530133151937860581862873213", ",", 
   "100614362403964431470819948104302789154573269730427727", ",", 
   "45933246666830115628077646879797770410630580703944891", ",", 
   "47200510935877743542197242878601168686721482556076533", ",", 
   "83370309667497408266363818164084439004003089348142860", ",", 
   "36823071583118755508323750060910742443134677354428736", ",", 
   "34489016612136439078482826142736320455216246655015344", ",", 
   "103212279580732140019361305613962981319178643541408419", ",", 
   "24755882983128634964457053358476711980172929185778496", ",", 
   "1113567818783571802779422010428617993880350255555798", ",", 
   "22178213839692213019812424473314585960438775626608857", ",", 
   "42251085783362503207803926636821790831016738884631804", ",", 
   "79525701851818893407894615722495026627354452019762351", ",", 
   "41840689963057928535802020600927756284414746551201708", ",", 
   "79569695030097420099831859273330959903174495163456981", ",", 
   "44870388477498678773148748310432611031425715808435796", ",", 
   "68069089165668636958854564477853789978701281403551852", ",", 
   "86030775261977985995224801801829936551231106292290926", ",", 
   "76037970698511471346903036696518045690230507514000380", ",", 
   "10467222016724922640886485016940070078674366475067699", ",", 
   "101299805174771317005840743325480546542173343692500632", ",", 
   "65076254819799640765674255823573309639689009187747179", ",", 
   "62605463119835127356409177226717707509879641267851347", ",", 
   "93087155673264490838095597787432142087246300637354341", ",", 
   "84858451911584506784085938944470826890461055009243639", ",", 
   "40722254630503647694113370055960183537840387129954059", ",", 
   "31598721631625903573891157012531356280017652533761222", ",", 
   "3517236633087412005589273851344199194883012722602501", ",", 
   "110675516159998559227006426864860257058409796209323922", ",", 
   "57637255335172695192012572896855038174990021572609444", ",", 
   "111712510887705372622813205269292400670764663327501133", ",", 
   "87343719638726465512983373848451812011623360660881074", ",", 
   "103264551544506460881674279620366228912169696863040662", ",", 
   "104543861020775169439711426238788146784490012714302523", ",", 
   "107687562349733191025254672274360053558265913441267491", ",", 
   "31444078217626668531973071883557989591739239725930696", ",", 
   "53059423649725872328278124546452804606434685166764724", ",", 
   "95282295899551067617551299739277836156571989120585538", ",", 
   "115019589374566409122148963184802656361103557866671050", ",", 
   "85059051487296533476162208459271646853826815656306558", ",", 
   "56773137177377611291783767390965289461168747470602409", ",", 
   "83256169029064009316105765778735714956721605818756987", ",", 
   "116737774063891388666663903705458699188695388168509484", ",", 
   "13270709152572979507775216974437608008421850711742015", ",", 
   "60198828744656461496444380028615765403482609963582551", ",", 
   "73363587014635318474636165807616553398947663948778144", ",", 
   "14172827676291833223864712038401094144212890983398648", ",", 
   "34718583894737074203187711254929202324541353463726041", ",", 
   "96600436841237821213910189646786281742046125314296878", ",", 
   "104484136891413275332853294984041360612989412696406594", ",", 
   "85600736995066935496873938055862315222567047333564434", ",", 
   "54814406150492568648888188618641363081350584373533800", ",", 
   "12080185280653832180970523231813085284769120446137098", ",", 
   "111551854762827222092455586701280667465111225538576285", ",", 
   "97739554306382655083063746799551959253650091646110050", ",", 
   "65417557940161860656443084558977710475724281687480477", ",", 
   "116352255104574449582049995256185440621590794933189493", ",", 
   "43935220902155090174591820072727521303046673799315170", ",", 
   "58165350337719825959102901310921114464377481623183578", ",", 
   "93604453352125616875291542412874957552320940318211687", ",", 
   "122872403516535290018167085401289772215937113092382230", ",", 
   "77563682641852038343427432593992813525196202648220003", ",", 
   "73605969621563132209618517024424267936274738125886111", ",", 
   "42381262866121709733869712611169297410755048365721275", ",", 
   "108353602025511807986436670138339801546041760340385673", ",", 
   "7000557300954039064421842066693770194948927360267670", ",", 
   "1390021430370645435610943555536703047298305220469844", ",", 
   "1332313178873091947450409540983193804359445753958113", ",", 
   "111023027009560670031933379319218807560847115913914397", ",", 
   "104159195976530507054702447946314446725595655527063332", ",", 
   "41618980793366404192102169077318551479418273610922909", ",", 
   "97568518974956757576203045643197079076387437860685254", ",", 
   "40908194226186127251396530682871966255703789161074540", ",", 
   "10234990785535015921233065816839943025978322974464946", ",", 
   "11670467475456674784681539107707095450623756586000719", ",", 
   "51630119860779937498728634849397409542358786818019114", ",", 
   "122444554203339537511703268344296476593943581785151078", ",", 
   "7883532954717574011338589091787426790738854675202636", ",", 
   "9605670169077672617080643966707267004908424169516428", ",", 
   "61806633107954464106375458030165524110348525057570146", ",", 
   "34498901591916664952469330456823114593204190193498985", ",", 
   "65417557940161860656443084558977710475724281687480477", ",", 
   "39913981993112474646384585860025554857949428448735472", ",", 
   "17619388605679377584082948704538584135674300239479168", ",", 
   "30092400406839182362599786894566740508407819474051567", ",", 
   "67379196289793377209152521315704182246104746108501454", ",", 
   "48515237281097995899878555536635711924805252310587389", ",", 
   "11863549584349318071562429818891460478262584394112903", ",", 
   "123522132447907760462850069460485123345189060855037468", ",", 
   "37582100433307334248844988656837920818766810265063333", ",", 
   "88802020029321570532691312987382099461541596497744701", ",", 
   "66191825822740762910766294040258082919480218503780642", ",", 
   "1467713142169065009374419501079280359204828246976678", ",", 
   "43266590613775158984296791089222489546398201700643794", ",", 
   "114520446638052359885808864843461818870522101993804397", ",", 
   "66291033243273818654726288377582171422890521620776859", ",", 
   "125375152074491909112263902325222100408969485439977847", ",", 
   "72911981121696896300239697418073432483842328888265792", ",", 
   "60013304222625694490734224710833894885830044006237156", ",", 
   "48248545555853150993107707346911494497979441955195600", ",", 
   "58351079664824719879906641236729204772201396882279139", ",", 
   "53779434726916738427780386456267966618535210661722332", ",", 
   "37633414255153852573631073155000941567297207640349712", ",", 
   "14414004651543958617312595896359446052648146175169908", ",", 
   "49474823421545985472395958858360931035212262733527658", ",", 
   "99054399688659793315729039331717537995858250151707023", ",", 
   "58165350337719825959102901310921114464377481623183578", ",", 
   "12273051468086323427104855830258335012223754133190701", ",", 
   "79381315875708815585997912725426800610798125469484789", ",", 
   "121065260155833272560675749542027216223767284414078590", ",", 
   "35983908241071501225921178908985892926223097121021408", ",", 
   "75345796443789481512942619510039751524971495681621102", ",", 
   "42896402116661503898554827739352834413085232861711466", ",", 
   "81111924195196405320069592056154879688664970849875243", ",", 
   "102306555361532512460460153906457073596773966106371091", ",", 
   "107744570515128199174981696245253551945757855103378620", ",", 
   "78482504218113213922358023351444593725476791252808493", ",", 
   "58350629223100574868302282296996111754517826302957179", ",", 
   "70616853388375153863321374539886882497419397774777380", ",", 
   "20133846978689753076193241679834075576905189925051701", ",", 
   "108180471399166160120013817006531921893294579262346263", ",", 
   "126376205942455308698871166314025252108594570384972306", ",", 
   "80647151005416120142283083840515050306541069478802049", ",", 
   "16688336835196738430022067492031591224629798929363592", ",", 
   "120125918683513043388529316962525007347406369242834237", ",", 
   "57903537460712396573381180819649340808868117293533684", ",", 
   "83330720552248641029769722465946651339939337901831536", ",", 
   "100442207550773444035619495088676031868501180145610471", ",", 
   "31005563394896726542266635612470484775295263543797677", ",", 
   "3844960198561642098849749830854382426654351345236497", ",", 
   "72559793937119377639334105450517348027850357067823792", ",", 
   "58165350337719825959102901310921114464377481623183578", ",", 
   "121224973941676449570516948762384509817747640760171589", ",", 
   "51793095980256481334327892103321035583245637529627787", ",", 
   "89254022787815801769919314207231906925116907549606168", ",", 
   "20877544420050340601460436879231818161576591537569536", ",", 
   "98485362758386147871553095342745349735603414029551469", ",", 
   "39303456929110595973761362961206820186920385895994133", ",", 
   "119753735981508501751169313918980461416354826999826555", ",", 
   "93560048817718286819217904294580912033357850810177163", ",", 
   "44883408310556413582132055690394544501916959606713816", ",", 
   "89303672342351909881634106711806567028570982920441824", ",", 
   "86098076096248242639694515918885044397538143069655995", ",", 
   "108353602025511807986436670138339801546041760340385673", ",", 
   "51039066799044720019240864863830101559319974809007485", ",", 
   "4443996771230987705920314562541097905277535227109935", ",", 
   "109299524316852686494363121102004880308974156948600375", ",", 
   "29695299476236267333779407538615239457628858466311857", ",", 
   "25857319976584671716131811241842388538852431892319239", ",", 
   "66509062458250548062926416165903743764982218721253463", ",", 
   "105590703743638420890880590692880838899283146709106968", ",", 
   "103889191514467580557171693056099801416507156075981050", ",", 
   "27677878213126978960416339089913825924988698119521641", ",", 
   "19592816646163793021940167240993807289318356660456943", ",", 
   "118137906546274400184895642301293159355037175933044243", ",", 
   "66476708499203749822691876922068215127320742052354664", ",", 
   "70246461584550913920655883875268237723101987977504559", ",", 
   "72786714311366621945628515283794928480448805375594434", ",", 
   "41819558700803514322188688054096404302563957262760172", ",", 
   "26355267628070170984723364600570202432311617554202345", ",", 
   "18965198500193766319528701051970863437878440711694169", ",", 
   "109299524316852686494363121102004880308974156948600375", ",", 
   "121802578689979594066584014290108687515384519042383681", ",", 
   "6355974324289595976530131186706573458844071453292396", ",", 
   "115019589374566409122148963184802656361103557866671050", ",", 
   "85059051487296533476162208459271646853826815656306558", ",", 
   "65417557940161860656443084558977710475724281687480477", ",", 
   "39913981993112474646384585860025554857949428448735472", ",", 
   "103280969396002018944697113625579576538499706044823144", ",", 
   "122844268243633803616728269686662051061845784295213566", ",", 
   "105008899136922451941690781713497879683942365677752695", ",", 
   "65152820683224039861300093815016321582364279112260253", ",", 
   "19238561644061285401369652441151226187943612949815952", ",", 
   "66850365695496402525685267697717962673566719165431598", ",", 
   "59567732271263282443327258512359794966237685169719617", ",", 
   "19343152444104328485430235901755258731159653445716251", ",", 
   "66315176339878167134061043903541064920029975812819292"}], "}"}]], "Output",
 CellChangeTimes->{3.7475672784874845`*^9, 3.7475675396762094`*^9, 
  3.747567575951759*^9},ExpressionUUID->"10c78adb-cae1-43b0-9be0-\
188aeb486839"],

Cell[BoxData["\<\" Write a method\[CapitalAAcute]\[Divide]\[CapitalEAcute]\
\[DownQuestion]KuyleBox[\\\"RSAcrack\\\",FontFamily->\\\"Courier \
New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\[Cedilla]\[OSlash]\
\[CapitalEAcute]\[DownQuestion]KuyleBox[\\\"[\\\",FontFamily->\\\"Courier New\
\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\[Divide]\[CapitalAAcute]\
\[CapitalAGrave]\[CapitalAGrave]K\.01tyleBox[\\\"cipher\\\",FontFamily->\\\"\
Courier New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\[Cedilla]\
\[CapitalAAcute]\[OSlash]\[CapitalEGrave]JuyleBox[\\\",\\\",FontFamily->\\\"\
Courier New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\[Cedilla]\
\[OSlash]\[CapitalEAcute]\[DownQuestion]KuyleBox[\\\"n\\\",FontFamily->\\\"\
Courier New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\[Divide]\
\[CapitalAAcute]\[CapitalAGrave]\[CapitalAGrave]K\.01tyleBox[\\\",\\\",\
FontFamily->\\\"Courier New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\
\[Cedilla]\[CapitalAAcute]\[CapitalAGrave]\[OSlash]StyleBox[\\\"e\\\",\
FontFamily->\\\"Courier New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]\
\[Cedilla]\[CapitalAAcute]\[OSlash]\[CapitalEGrave]JuyleBox[\\\"]\\\",\
FontFamily->\\\"Courier New\\\",FontWeight->\\\"Regular\\\"]\[CapitalAGrave]k\
\.01hat will crack a standard RSA cipher and delivers clear text from the \
string cipher.When you are finished with your method,you should investigate \
how long it will take to crack the cipher of the English text 'ATTENTION THE \
UNIVERSE! BY KINGDOMS RIGHT WHEEL.'for different sizes on your public key n \
(100-200 bits).Visualize your results in a proper graph.It is very important \
that you study the section 2.3 in the instructions.Your graph should lead you \
to a model where you can predict how long it would take to crack a cipher if \
n is 1024,2048 bits or 4096 bits\"\>"], "Output",
 CellChangeTimes->{3.7475672784874845`*^9, 3.7475675396762094`*^9, 
  3.7475675927868166`*^9},ExpressionUUID->"336166f0-cada-4f1c-9420-\
624829d7e3d5"]
}, Open  ]],

Cell["", "Item",
 CellChangeTimes->{
  3.7475502639336185`*^9},ExpressionUUID->"c3cc1a73-f183-4f15-80ab-\
89023212a9e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.745905771551632*^9, 
  3.745905771790147*^9}},ExpressionUUID->"cf35cfb8-1486-4825-812c-\
90f8a5331531"],

Cell["Discussion", "Subsection",
 CellChangeTimes->{{3.745898345279364*^9, 
  3.745898357900612*^9}},ExpressionUUID->"fb0467b7-2560-426a-9885-\
71fadd10c604"],

Cell["Conclusion", "Subsection",
 CellChangeTimes->{{3.745898345279364*^9, 3.745898357900612*^9}, {
  3.746528174422826*^9, 
  3.746528177186994*^9}},ExpressionUUID->"c41b306e-d6c7-44a3-8405-\
b6b45ba7f785"]
}, Open  ]],

Cell["Code", "Section",ExpressionUUID->"5db27201-8e84-44c4-a7b8-56e401f6c4eb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2160, 1316},
WindowMargins->{{-11, Automatic}, {Automatic, -11}},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
Magnification:>2.8 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.2 for Microsoft Windows (64-bit) (September 10, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 213, 4, 228, "Title",ExpressionUUID->"5ec30780-8770-4edb-9a4e-e84cbbc34bc1"],
Cell[796, 28, 265, 7, 147, "Text",ExpressionUUID->"d76c9fe8-0de8-4e96-bcad-8e09a7a9c32f"],
Cell[1064, 37, 212, 6, 147, "Text",ExpressionUUID->"5b59cc00-72b1-4851-955b-05cf10d132c5"],
Cell[CellGroupData[{
Cell[1301, 47, 188, 3, 168, "Subchapter",ExpressionUUID->"c9c485c5-5de3-466d-bc62-d72c6f1c8608"],
Cell[CellGroupData[{
Cell[1514, 54, 154, 3, 164, "Section",ExpressionUUID->"a9d86dbc-b04f-485a-8334-5a7faf580b36"],
Cell[CellGroupData[{
Cell[1693, 61, 81, 0, 115, "Subsection",ExpressionUUID->"37160594-fd08-48db-8a0d-e5ce0d11e4d4"],
Cell[1777, 63, 479, 12, 147, "Text",ExpressionUUID->"0f7c5925-c5f7-4da9-a00d-9df69ff63f28"],
Cell[2259, 77, 262, 7, 132, "Input",ExpressionUUID->"fb2643d5-a89e-45d3-a97b-df9990bc53bb"],
Cell[2524, 86, 840, 15, 556, "Input",ExpressionUUID->"454582b8-1684-4d2d-b3af-b4543c900034"],
Cell[3367, 103, 129, 0, 82, "Item",ExpressionUUID->"569cd3ed-e8dd-44a1-b8ee-7b123999981e"]
}, Open  ]],
Cell[3511, 106, 83, 0, 115, "Subsection",ExpressionUUID->"0b612558-1670-4264-bb78-fe41fae05863"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3631, 111, 204, 4, 164, "Section",ExpressionUUID->"e77817a6-e9d0-478e-828c-48e49be85994"],
Cell[CellGroupData[{
Cell[3860, 119, 4659, 114, 1881, "Input",ExpressionUUID->"da33be6c-8bc4-4312-9f5c-a0a477956acd"],
Cell[8522, 235, 350, 10, 90, "Output",ExpressionUUID->"865c92c8-b119-4663-b7cd-adb8896c0fe4"],
Cell[8875, 247, 355, 5, 197, "Output",ExpressionUUID->"d973d3f7-cd88-4346-b1ee-858f84b69666"]
}, Open  ]],
Cell[9245, 255, 175, 3, 78, "Input",ExpressionUUID->"f96b4ff5-f5d4-4d58-9e3e-96c21a14ea98"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9469, 264, 232, 4, 168, "Subchapter",ExpressionUUID->"b3b265e7-0d9c-49a2-84ae-469bf0bbbecc"],
Cell[CellGroupData[{
Cell[9726, 272, 152, 3, 164, "Section",ExpressionUUID->"77c0908a-0d85-44ff-8c93-72b15ce3eac1"],
Cell[CellGroupData[{
Cell[9903, 279, 81, 0, 115, "Subsection",ExpressionUUID->"4d088a5a-2d11-429b-93d7-104b72cfc49a"],
Cell[9987, 281, 829, 14, 374, "Text",ExpressionUUID->"d19ca678-b342-43db-9f2b-cb94cef6017a"],
Cell[10819, 297, 113, 0, 82, "Item",ExpressionUUID->"3c5268bc-04df-4e94-ac65-afa1cb9727b1"]
}, Open  ]],
Cell[10947, 300, 83, 0, 115, "Subsection",ExpressionUUID->"076898f5-7c34-4cc2-923b-a978a097670e"],
Cell[CellGroupData[{
Cell[11055, 304, 158, 3, 85, "Subsection",ExpressionUUID->"dd6f43ed-e851-49ca-a4c7-c24d7cd2ee41"],
Cell[11216, 309, 1124, 20, 429, "Text",ExpressionUUID->"82335164-7cf1-44c0-9266-37e8b125e74f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12377, 334, 207, 4, 115, "Subsection",ExpressionUUID->"14c30cb5-8159-42d8-8dee-5696a6e728a0"],
Cell[12587, 340, 252, 6, 90, "Text",ExpressionUUID->"9f58eac4-5992-4cb7-a0dd-572060a7dcec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12888, 352, 78, 0, 164, "Section",ExpressionUUID->"a4c88bd6-dac7-47d2-81b0-72668aee5a85"],
Cell[CellGroupData[{
Cell[12991, 356, 15778, 353, 5397, "Input",ExpressionUUID->"6fdbb906-5bdb-4ac2-8605-06731da069ee"],
Cell[28772, 711, 18601, 283, 14806, "Output",ExpressionUUID->"10c78adb-cae1-43b0-9be0-188aeb486839"],
Cell[47376, 996, 2021, 27, 905, "Output",ExpressionUUID->"336166f0-cada-4f1c-9420-624829d7e3d5"]
}, Open  ]],
Cell[49412, 1026, 120, 3, 82, "Item",ExpressionUUID->"c3cc1a73-f183-4f15-80ab-89023212a9e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49569, 1034, 152, 3, 164, "Section",ExpressionUUID->"cf35cfb8-1486-4825-812c-90f8a5331531"],
Cell[49724, 1039, 158, 3, 115, "Subsection",ExpressionUUID->"fb0467b7-2560-426a-9885-71fadd10c604"],
Cell[49885, 1044, 207, 4, 85, "Subsection",ExpressionUUID->"c41b306e-d6c7-44a3-8405-b6b45ba7f785"]
}, Open  ]],
Cell[50107, 1051, 78, 0, 164, "Section",ExpressionUUID->"5db27201-8e84-44c4-a7b8-56e401f6c4eb"]
}, Open  ]]
}, Open  ]]
}
]
*)

